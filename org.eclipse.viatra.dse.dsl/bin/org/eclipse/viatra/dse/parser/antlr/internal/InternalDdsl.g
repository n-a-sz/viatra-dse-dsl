/*
 * generated by Xtext 2.10.0
 */
grammar InternalDdsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.viatra.dse.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.viatra.dse.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.viatra.dse.services.DdslGrammarAccess;

}

@parser::members {

 	private DdslGrammarAccess grammarAccess;

    public InternalDdslParser(TokenStream input, DdslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DomainModel";
   	}

   	@Override
   	protected DdslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDomainModel
entryRuleDomainModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainModelRule()); }
	iv_ruleDomainModel=ruleDomainModel
	{ $current=$iv_ruleDomainModel.current; }
	EOF;

// Rule DomainModel
ruleDomainModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDomainModelAccess().getTypeTypeParserRuleCall_0());
			}
			lv_type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDomainModelRule());
				}
				add(
					$current,
					"type",
					lv_type_0_0,
					"org.eclipse.viatra.dse.Ddsl.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleDseExecutionModel
entryRuleDseExecutionModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDseExecutionModelRule()); }
	iv_ruleDseExecutionModel=ruleDseExecutionModel
	{ $current=$iv_ruleDseExecutionModel.current; }
	EOF;

// Rule DseExecutionModel
ruleDseExecutionModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDseExecutionModelAccess().getDseExecutionModelAction_0(),
					$current);
			}
		)
		otherlv_1='ExecutionModel'
		{
			newLeafNode(otherlv_1, grammarAccess.getDseExecutionModelAccess().getExecutionModelKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDseExecutionModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDseExecutionModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getDseExecutionModelAccess().getColonKeyword_3());
		}
		(
			otherlv_4='packageName'
			{
				newLeafNode(otherlv_4, grammarAccess.getDseExecutionModelAccess().getPackageNameKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDseExecutionModelAccess().getPackageNameEStringParserRuleCall_4_1_0());
					}
					lv_packageName_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDseExecutionModelRule());
						}
						set(
							$current,
							"packageName",
							lv_packageName_5_0,
							"org.eclipse.viatra.dse.Ddsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='configurations'
			{
				newLeafNode(otherlv_6, grammarAccess.getDseExecutionModelAccess().getConfigurationsKeyword_5_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getDseExecutionModelAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseExecutionModelRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDseExecutionModelAccess().getConfigurationsConfigurationCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getDseExecutionModelAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDseExecutionModelRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDseExecutionModelAccess().getConfigurationsConfigurationCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getDseExecutionModelAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDseExecutionModelRule());
					}
				}
				otherlv_12=RULE_ID
				{
					newLeafNode(otherlv_12, grammarAccess.getDseExecutionModelAccess().getDseproblemsDseProblemCrossReference_6_0());
				}
			)
		)*
		(
			otherlv_13='runs'
			{
				newLeafNode(otherlv_13, grammarAccess.getDseExecutionModelAccess().getRunsKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDseExecutionModelAccess().getNumberOfRunsEIntParserRuleCall_7_1_0());
					}
					lv_numberOfRuns_14_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDseExecutionModelRule());
						}
						set(
							$current,
							"numberOfRuns",
							lv_numberOfRuns_14_0,
							"org.eclipse.viatra.dse.Ddsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_15='dseproblemcomponents'
			{
				newLeafNode(otherlv_15, grammarAccess.getDseExecutionModelAccess().getDseproblemcomponentsKeyword_8_0());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getDseExecutionModelAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseExecutionModelRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDseExecutionModelAccess().getDseproblemcomponentsDseProblemComponentCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getDseExecutionModelAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDseExecutionModelRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDseExecutionModelAccess().getDseproblemcomponentsDseProblemComponentCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getDseExecutionModelAccess().getRightParenthesisKeyword_8_4());
			}
		)?
		otherlv_21=';'
		{
			newLeafNode(otherlv_21, grammarAccess.getDseExecutionModelAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleDseProblem
entryRuleDseProblem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDseProblemRule()); }
	iv_ruleDseProblem=ruleDseProblem
	{ $current=$iv_ruleDseProblem.current; }
	EOF;

// Rule DseProblem
ruleDseProblem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Problem'
		{
			newLeafNode(otherlv_0, grammarAccess.getDseProblemAccess().getProblemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDseProblemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDseProblemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDseProblemAccess().getColonKeyword_2());
		}
		(
			otherlv_3='imports'
			{
				newLeafNode(otherlv_3, grammarAccess.getDseProblemAccess().getImportsKeyword_3_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getDseProblemAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDseProblemAccess().getImportsEStringParserRuleCall_3_2_0());
					}
					lv_imports_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDseProblemRule());
						}
						add(
							$current,
							"imports",
							lv_imports_5_0,
							"org.eclipse.viatra.dse.Ddsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getDseProblemAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDseProblemAccess().getImportsEStringParserRuleCall_3_3_1_0());
						}
						lv_imports_7_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDseProblemRule());
							}
							add(
								$current,
								"imports",
								lv_imports_7_0,
								"org.eclipse.viatra.dse.Ddsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_8=';'
				{
					newLeafNode(otherlv_8, grammarAccess.getDseProblemAccess().getSemicolonKeyword_3_4());
				}
			)?
		)?
		(
			otherlv_9='Configuration'
			{
				newLeafNode(otherlv_9, grammarAccess.getDseProblemAccess().getConfigurationKeyword_4_0());
			}
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getDseProblemAccess().getColonKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDseProblemAccess().getConfigurationsConfigurationCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='Constraint'
			{
				newLeafNode(otherlv_12, grammarAccess.getDseProblemAccess().getConstraintKeyword_5_0());
			}
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getDseProblemAccess().getColonKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getDseProblemAccess().getConstraintsConstraintCrossReference_5_2_0());
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getDseProblemAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDseProblemRule());
							}
						}
						otherlv_16=RULE_ID
						{
							newLeafNode(otherlv_16, grammarAccess.getDseProblemAccess().getConstraintsConstraintCrossReference_5_3_1_0());
						}
					)
				)
			)*
		)?
		(
			otherlv_17='InitialModel'
			{
				newLeafNode(otherlv_17, grammarAccess.getDseProblemAccess().getInitialModelKeyword_6_0());
			}
			otherlv_18=':'
			{
				newLeafNode(otherlv_18, grammarAccess.getDseProblemAccess().getColonKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					otherlv_19=RULE_ID
					{
						newLeafNode(otherlv_19, grammarAccess.getDseProblemAccess().getInitialmodelInitialModelCrossReference_6_2_0());
					}
				)
			)
		)?
		(
			otherlv_20='MetaModel'
			{
				newLeafNode(otherlv_20, grammarAccess.getDseProblemAccess().getMetaModelKeyword_7_0());
			}
			otherlv_21=':'
			{
				newLeafNode(otherlv_21, grammarAccess.getDseProblemAccess().getColonKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDseProblemAccess().getMetamodelMetaModelCrossReference_7_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_23='objectives'
		{
			newLeafNode(otherlv_23, grammarAccess.getDseProblemAccess().getObjectivesKeyword_8());
		}
		otherlv_24=':'
		{
			newLeafNode(otherlv_24, grammarAccess.getDseProblemAccess().getColonKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDseProblemRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDseProblemAccess().getObjectivesBaseObjectiveCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_26=','
			{
				newLeafNode(otherlv_26, grammarAccess.getDseProblemAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					otherlv_27=RULE_ID
					{
						newLeafNode(otherlv_27, grammarAccess.getDseProblemAccess().getObjectivesBaseObjectiveCrossReference_11_1_0());
					}
				)
			)
		)*
		otherlv_28='Rules'
		{
			newLeafNode(otherlv_28, grammarAccess.getDseProblemAccess().getRulesKeyword_12());
		}
		otherlv_29=':'
		{
			newLeafNode(otherlv_29, grammarAccess.getDseProblemAccess().getColonKeyword_13());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDseProblemRule());
					}
				}
				otherlv_30=RULE_ID
				{
					newLeafNode(otherlv_30, grammarAccess.getDseProblemAccess().getTransformationrulesTransformationRuleCrossReference_14_0());
				}
			)
		)
		(
			otherlv_31=','
			{
				newLeafNode(otherlv_31, grammarAccess.getDseProblemAccess().getCommaKeyword_15_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					otherlv_32=RULE_ID
					{
						newLeafNode(otherlv_32, grammarAccess.getDseProblemAccess().getTransformationrulesTransformationRuleCrossReference_15_1_0());
					}
				)
			)
		)*
		(
			otherlv_33='StateCoder'
			{
				newLeafNode(otherlv_33, grammarAccess.getDseProblemAccess().getStateCoderKeyword_16_0());
			}
			otherlv_34=':'
			{
				newLeafNode(otherlv_34, grammarAccess.getDseProblemAccess().getColonKeyword_16_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					otherlv_35=RULE_ID
					{
						newLeafNode(otherlv_35, grammarAccess.getDseProblemAccess().getStatecoderStateCoderCrossReference_16_2_0());
					}
				)
			)
		)?
		(
			otherlv_36='SolutionStore'
			{
				newLeafNode(otherlv_36, grammarAccess.getDseProblemAccess().getSolutionStoreKeyword_17_0());
			}
			otherlv_37=':'
			{
				newLeafNode(otherlv_37, grammarAccess.getDseProblemAccess().getColonKeyword_17_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDseProblemRule());
						}
					}
					otherlv_38=RULE_ID
					{
						newLeafNode(otherlv_38, grammarAccess.getDseProblemAccess().getSolutionstoreSolutionStoreCrossReference_17_2_0());
					}
				)
			)
		)?
		otherlv_39=';'
		{
			newLeafNode(otherlv_39, grammarAccess.getDseProblemAccess().getSemicolonKeyword_18());
		}
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigurationAccess().getConfigurationAction_0(),
					$current);
			}
		)
		otherlv_1='Configuration'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getConfigurationKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getConfigurationAccess().getColonKeyword_3());
		}
		(
			otherlv_4='maxNumberOfThreads'
			{
				newLeafNode(otherlv_4, grammarAccess.getConfigurationAccess().getMaxNumberOfThreadsKeyword_4_0());
			}
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getConfigurationAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationAccess().getMaxNumberOfThreadsEIntParserRuleCall_4_2_0());
					}
					lv_maxNumberOfThreads_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationRule());
						}
						set(
							$current,
							"maxNumberOfThreads",
							lv_maxNumberOfThreads_6_0,
							"org.eclipse.viatra.dse.Ddsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='dseproblems'
			{
				newLeafNode(otherlv_7, grammarAccess.getConfigurationAccess().getDseproblemsKeyword_5_0());
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getConfigurationAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigurationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConfigurationAccess().getDseproblemsDseProblemCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getConfigurationAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConfigurationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getConfigurationAccess().getDseproblemsDseProblemCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getConfigurationAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigurationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getStrategyBaseStrategyCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getConfigurationAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleStrategy
entryRuleStrategy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrategyRule()); }
	iv_ruleStrategy=ruleStrategy
	{ $current=$iv_ruleStrategy.current; }
	EOF;

// Rule Strategy
ruleStrategy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStrategyAccess().getStrategyAction_0(),
					$current);
			}
		)
		otherlv_1='Strategy'
		{
			newLeafNode(otherlv_1, grammarAccess.getStrategyAccess().getStrategyKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStrategyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStrategyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getStrategyAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStrategyAccess().getTypeStrategyTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleStrategyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStrategyRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"org.eclipse.viatra.dse.Ddsl.StrategyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getStrategyAccess().getLeftParenthesisKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStrategyAccess().getDepthEIntParserRuleCall_5_1_0());
					}
					lv_depth_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStrategyRule());
						}
						set(
							$current,
							"depth",
							lv_depth_6_0,
							"org.eclipse.viatra.dse.Ddsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getStrategyAccess().getRightParenthesisKeyword_5_2());
			}
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getStrategyAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleConstraint_Impl
entryRuleConstraint_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraint_ImplRule()); }
	iv_ruleConstraint_Impl=ruleConstraint_Impl
	{ $current=$iv_ruleConstraint_Impl.current; }
	EOF;

// Rule Constraint_Impl
ruleConstraint_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraint_ImplAccess().getConstraintAction_0(),
					$current);
			}
		)
		otherlv_1='Constraint'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraint_ImplAccess().getConstraintKeyword_1());
		}
		(
			(
				lv_constraintName_2_0=RULE_ID
				{
					newLeafNode(lv_constraintName_2_0, grammarAccess.getConstraint_ImplAccess().getConstraintNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraint_ImplRule());
					}
					setWithLastConsumed(
						$current,
						"constraintName",
						lv_constraintName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleInitialModel
entryRuleInitialModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialModelRule()); }
	iv_ruleInitialModel=ruleInitialModel
	{ $current=$iv_ruleInitialModel.current; }
	EOF;

// Rule InitialModel
ruleInitialModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitialModelAccess().getInitialModelAction_0(),
					$current);
			}
		)
		otherlv_1='InitialModel'
		{
			newLeafNode(otherlv_1, grammarAccess.getInitialModelAccess().getInitialModelKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInitialModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getInitialModelAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitialModelAccess().getPathEStringParserRuleCall_4_0());
				}
				lv_path_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitialModelRule());
					}
					set(
						$current,
						"path",
						lv_path_4_0,
						"org.eclipse.viatra.dse.Ddsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getInitialModelAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleMetaModel
entryRuleMetaModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaModelRule()); }
	iv_ruleMetaModel=ruleMetaModel
	{ $current=$iv_ruleMetaModel.current; }
	EOF;

// Rule MetaModel
ruleMetaModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMetaModelAccess().getMetaModelAction_0(),
					$current);
			}
		)
		otherlv_1='MetaModel'
		{
			newLeafNode(otherlv_1, grammarAccess.getMetaModelAccess().getMetaModelKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetaModelAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetaModelRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.viatra.dse.Ddsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getMetaModelAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleBaseObjective_Impl
entryRuleBaseObjective_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseObjective_ImplRule()); }
	iv_ruleBaseObjective_Impl=ruleBaseObjective_Impl
	{ $current=$iv_ruleBaseObjective_Impl.current; }
	EOF;

// Rule BaseObjective_Impl
ruleBaseObjective_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBaseObjective_ImplAccess().getBaseObjectiveAction_0(),
					$current);
			}
		)
		otherlv_1='BaseObjective'
		{
			newLeafNode(otherlv_1, grammarAccess.getBaseObjective_ImplAccess().getBaseObjectiveKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getBaseObjective_ImplAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseObjective_ImplRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getBaseObjective_ImplAccess().getColonKeyword_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBaseObjective_ImplAccess().getFitnessConstraintEDoubleParserRuleCall_4_0());
				}
				lv_fitnessConstraint_4_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBaseObjective_ImplRule());
					}
					set(
						$current,
						"fitnessConstraint",
						lv_fitnessConstraint_4_0,
						"org.eclipse.viatra.dse.Ddsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBaseObjective_ImplAccess().getComparatorComparatorsEnumRuleCall_5_0());
				}
				lv_comparator_5_0=ruleComparators
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBaseObjective_ImplRule());
					}
					set(
						$current,
						"comparator",
						lv_comparator_5_0,
						"org.eclipse.viatra.dse.Ddsl.Comparators");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getBaseObjective_ImplAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleTransformationRule
entryRuleTransformationRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationRuleRule()); }
	iv_ruleTransformationRule=ruleTransformationRule
	{ $current=$iv_ruleTransformationRule.current; }
	EOF;

// Rule TransformationRule
ruleTransformationRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTransformationRuleAccess().getTransformationRuleAction_0(),
					$current);
			}
		)
		otherlv_1='Rule'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransformationRuleAccess().getRuleKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTransformationRuleAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransformationRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransformationRuleAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformationRuleAccess().getClassNameEStringParserRuleCall_4_0());
				}
				lv_className_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformationRuleRule());
					}
					set(
						$current,
						"className",
						lv_className_4_0,
						"org.eclipse.viatra.dse.Ddsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getTransformationRuleAccess().getFullStopKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformationRuleAccess().getMethodNameEStringParserRuleCall_6_0());
				}
				lv_methodName_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformationRuleRule());
					}
					set(
						$current,
						"methodName",
						lv_methodName_6_0,
						"org.eclipse.viatra.dse.Ddsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='()'
		{
			newLeafNode(otherlv_7, grammarAccess.getTransformationRuleAccess().getLeftParenthesisRightParenthesisKeyword_7());
		}
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getTransformationRuleAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleStateCoder
entryRuleStateCoder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateCoderRule()); }
	iv_ruleStateCoder=ruleStateCoder
	{ $current=$iv_ruleStateCoder.current; }
	EOF;

// Rule StateCoder
ruleStateCoder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStateCoderAccess().getStateCoderAction_0(),
					$current);
			}
		)
		otherlv_1='StateCoder'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateCoderAccess().getStateCoderKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStateCoderAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateCoderRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getStateCoderAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleConstraintsObjective
entryRuleConstraintsObjective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintsObjectiveRule()); }
	iv_ruleConstraintsObjective=ruleConstraintsObjective
	{ $current=$iv_ruleConstraintsObjective.current; }
	EOF;

// Rule ConstraintsObjective
ruleConstraintsObjective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintsObjectiveAccess().getConstraintsObjectiveAction_0(),
					$current);
			}
		)
		otherlv_1='ConstraintsObjective'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraintsObjectiveAccess().getConstraintsObjectiveKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getConstraintsObjectiveAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintsObjectiveRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getConstraintsObjectiveAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsObjectiveAccess().getFitnessConstraintEDoubleParserRuleCall_4_0());
				}
				lv_fitnessConstraint_4_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsObjectiveRule());
					}
					set(
						$current,
						"fitnessConstraint",
						lv_fitnessConstraint_4_0,
						"org.eclipse.viatra.dse.Ddsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5='hardConstraints'
			{
				newLeafNode(otherlv_5, grammarAccess.getConstraintsObjectiveAccess().getHardConstraintsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintsObjectiveAccess().getHardConstraintsQueryConstraintParserRuleCall_5_1_0());
					}
					lv_hardConstraints_6_0=ruleQueryConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintsObjectiveRule());
						}
						add(
							$current,
							"hardConstraints",
							lv_hardConstraints_6_0,
							"org.eclipse.viatra.dse.Ddsl.QueryConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_7='softConstraints'
			{
				newLeafNode(otherlv_7, grammarAccess.getConstraintsObjectiveAccess().getSoftConstraintsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintsObjectiveAccess().getSoftConstraintsQueryConstraintParserRuleCall_6_1_0());
					}
					lv_softConstraints_8_0=ruleQueryConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintsObjectiveRule());
						}
						add(
							$current,
							"softConstraints",
							lv_softConstraints_8_0,
							"org.eclipse.viatra.dse.Ddsl.QueryConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsObjectiveAccess().getComparatorComparatorsEnumRuleCall_7_0());
				}
				lv_comparator_9_0=ruleComparators
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsObjectiveRule());
					}
					set(
						$current,
						"comparator",
						lv_comparator_9_0,
						"org.eclipse.viatra.dse.Ddsl.Comparators");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getConstraintsObjectiveAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleQueryConstraint
entryRuleQueryConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryConstraintRule()); }
	iv_ruleQueryConstraint=ruleQueryConstraint
	{ $current=$iv_ruleQueryConstraint.current; }
	EOF;

// Rule QueryConstraint
ruleQueryConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getQueryConstraintAccess().getQueryConstraintAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getQueryConstraintAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getQueryConstraintAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getQueryConstraintAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryConstraintAccess().getConstraintNameEStringParserRuleCall_3_1_0());
					}
					lv_constraintName_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryConstraintRule());
						}
						set(
							$current,
							"constraintName",
							lv_constraintName_4_0,
							"org.eclipse.viatra.dse.Ddsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getQueryConstraintAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryConstraintAccess().getWeightEDoubleParserRuleCall_4_1_0());
					}
					lv_weight_6_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryConstraintRule());
						}
						set(
							$current,
							"weight",
							lv_weight_6_0,
							"org.eclipse.viatra.dse.Ddsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getQueryConstraintAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryConstraintAccess().getTypeModelQueryTypeEnumRuleCall_5_1_0());
					}
					lv_type_8_0=ruleModelQueryType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryConstraintRule());
						}
						set(
							$current,
							"type",
							lv_type_8_0,
							"org.eclipse.viatra.dse.Ddsl.ModelQueryType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getQueryConstraintAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleSolutionStore
entryRuleSolutionStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSolutionStoreRule()); }
	iv_ruleSolutionStore=ruleSolutionStore
	{ $current=$iv_ruleSolutionStore.current; }
	EOF;

// Rule SolutionStore
ruleSolutionStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSolutionStoreAccess().getSolutionStoreAction_0(),
					$current);
			}
		)
		otherlv_1='SolutionStore'
		{
			newLeafNode(otherlv_1, grammarAccess.getSolutionStoreAccess().getSolutionStoreKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSolutionStoreAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSolutionStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSolutionStoreAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSolutionStoreAccess().getFoundSolutionsEIntParserRuleCall_4_0());
				}
				lv_foundSolutions_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSolutionStoreRule());
					}
					set(
						$current,
						"foundSolutions",
						lv_foundSolutions_4_0,
						"org.eclipse.viatra.dse.Ddsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_acceptAnySolutions_5_0='acceptAnySolutions'
				{
					newLeafNode(lv_acceptAnySolutions_5_0, grammarAccess.getSolutionStoreAccess().getAcceptAnySolutionsAcceptAnySolutionsKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSolutionStoreRule());
					}
					setWithLastConsumed($current, "acceptAnySolutions", true, "acceptAnySolutions");
				}
			)
		)?
		(
			(
				lv_storeBestSolutionsOnly_6_0='storeBestSolutionsOnly'
				{
					newLeafNode(lv_storeBestSolutionsOnly_6_0, grammarAccess.getSolutionStoreAccess().getStoreBestSolutionsOnlyStoreBestSolutionsOnlyKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSolutionStoreRule());
					}
					setWithLastConsumed($current, "storeBestSolutionsOnly", true, "storeBestSolutionsOnly");
				}
			)
		)?
		(
			(
				lv_logSolutionsWhenFound_7_0='logSolutionsWhenFound'
				{
					newLeafNode(lv_logSolutionsWhenFound_7_0, grammarAccess.getSolutionStoreAccess().getLogSolutionsWhenFoundLogSolutionsWhenFoundKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSolutionStoreRule());
					}
					setWithLastConsumed($current, "logSolutionsWhenFound", true, "logSolutionsWhenFound");
				}
			)
		)?
		(
			(
				lv_registerSolutionFoundHandler_8_0='registerSolutionFoundHandler'
				{
					newLeafNode(lv_registerSolutionFoundHandler_8_0, grammarAccess.getSolutionStoreAccess().getRegisterSolutionFoundHandlerRegisterSolutionFoundHandlerKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSolutionStoreRule());
					}
					setWithLastConsumed($current, "registerSolutionFoundHandler", true, "registerSolutionFoundHandler");
				}
			)
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getSolutionStoreAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleDseImport_Impl
entryRuleDseImport_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDseImport_ImplRule()); }
	iv_ruleDseImport_Impl=ruleDseImport_Impl
	{ $current=$iv_ruleDseImport_Impl.current; }
	EOF;

// Rule DseImport_Impl
ruleDseImport_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDseImport_ImplAccess().getDseImportAction_0(),
					$current);
			}
		)
		otherlv_1='DseImport'
		{
			newLeafNode(otherlv_1, grammarAccess.getDseImport_ImplAccess().getDseImportKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDseImport_ImplAccess().getImportsEStringParserRuleCall_2_0());
				}
				lv_imports_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDseImport_ImplRule());
					}
					add(
						$current,
						"imports",
						lv_imports_2_0,
						"org.eclipse.viatra.dse.Ddsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEvolutionaryStrategyBuilder
entryRuleEvolutionaryStrategyBuilder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvolutionaryStrategyBuilderRule()); }
	iv_ruleEvolutionaryStrategyBuilder=ruleEvolutionaryStrategyBuilder
	{ $current=$iv_ruleEvolutionaryStrategyBuilder.current; }
	EOF;

// Rule EvolutionaryStrategyBuilder
ruleEvolutionaryStrategyBuilder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvolutionaryStrategyBuilderAccess().getEvolutionaryStrategyBuilderAction_0(),
					$current);
			}
		)
		otherlv_1='EvolutionaryStrategyBuilder'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvolutionaryStrategyBuilderAccess().getEvolutionaryStrategyBuilderKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEvolutionaryStrategyBuilderAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvolutionaryStrategyBuilderRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvolutionaryStrategyBuilderAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionaryStrategyBuilderAccess().getPopulationSizeEIntParserRuleCall_4_0());
				}
				lv_populationSize_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionaryStrategyBuilderRule());
					}
					set(
						$current,
						"populationSize",
						lv_populationSize_4_0,
						"org.eclipse.viatra.dse.Ddsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEvolutionaryStrategyBuilderAccess().getTypeEvolutionStrategyTypeEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleEvolutionStrategyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvolutionaryStrategyBuilderRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.eclipse.viatra.dse.Ddsl.EvolutionStrategyType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_6='crossOvers'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvolutionaryStrategyBuilderAccess().getCrossOversKeyword_6_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getEvolutionaryStrategyBuilderAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvolutionaryStrategyBuilderAccess().getCrossOversEStringParserRuleCall_6_2_0());
					}
					lv_crossOvers_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvolutionaryStrategyBuilderRule());
						}
						add(
							$current,
							"crossOvers",
							lv_crossOvers_8_0,
							"org.eclipse.viatra.dse.Ddsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getEvolutionaryStrategyBuilderAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvolutionaryStrategyBuilderAccess().getCrossOversEStringParserRuleCall_6_3_1_0());
						}
						lv_crossOvers_10_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvolutionaryStrategyBuilderRule());
							}
							add(
								$current,
								"crossOvers",
								lv_crossOvers_10_0,
								"org.eclipse.viatra.dse.Ddsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getEvolutionaryStrategyBuilderAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		(
			otherlv_12='mutations'
			{
				newLeafNode(otherlv_12, grammarAccess.getEvolutionaryStrategyBuilderAccess().getMutationsKeyword_7_0());
			}
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getEvolutionaryStrategyBuilderAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEvolutionaryStrategyBuilderRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getEvolutionaryStrategyBuilderAccess().getMutationsIMutationRateCrossReference_7_2_0());
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getEvolutionaryStrategyBuilderAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEvolutionaryStrategyBuilderRule());
							}
						}
						otherlv_16=RULE_ID
						{
							newLeafNode(otherlv_16, grammarAccess.getEvolutionaryStrategyBuilderAccess().getMutationsIMutationRateCrossReference_7_3_1_0());
						}
					)
				)
			)*
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getEvolutionaryStrategyBuilderAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		otherlv_18=';'
		{
			newLeafNode(otherlv_18, grammarAccess.getEvolutionaryStrategyBuilderAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getType_ImplParserRuleCall_0());
		}
		this_Type_Impl_0=ruleType_Impl
		{
			$current = $this_Type_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getDseExecutionModelParserRuleCall_1());
		}
		this_DseExecutionModel_1=ruleDseExecutionModel
		{
			$current = $this_DseExecutionModel_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getDseProblemParserRuleCall_2());
		}
		this_DseProblem_2=ruleDseProblem
		{
			$current = $this_DseProblem_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getConfigurationParserRuleCall_3());
		}
		this_Configuration_3=ruleConfiguration
		{
			$current = $this_Configuration_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getStrategyParserRuleCall_4());
		}
		this_Strategy_4=ruleStrategy
		{
			$current = $this_Strategy_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getConstraint_ImplParserRuleCall_5());
		}
		this_Constraint_Impl_5=ruleConstraint_Impl
		{
			$current = $this_Constraint_Impl_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getInitialModelParserRuleCall_6());
		}
		this_InitialModel_6=ruleInitialModel
		{
			$current = $this_InitialModel_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getMetaModelParserRuleCall_7());
		}
		this_MetaModel_7=ruleMetaModel
		{
			$current = $this_MetaModel_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getBaseObjective_ImplParserRuleCall_8());
		}
		this_BaseObjective_Impl_8=ruleBaseObjective_Impl
		{
			$current = $this_BaseObjective_Impl_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getTransformationRuleParserRuleCall_9());
		}
		this_TransformationRule_9=ruleTransformationRule
		{
			$current = $this_TransformationRule_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getStateCoderParserRuleCall_10());
		}
		this_StateCoder_10=ruleStateCoder
		{
			$current = $this_StateCoder_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getConstraintsObjectiveParserRuleCall_11());
		}
		this_ConstraintsObjective_11=ruleConstraintsObjective
		{
			$current = $this_ConstraintsObjective_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getQueryConstraintParserRuleCall_12());
		}
		this_QueryConstraint_12=ruleQueryConstraint
		{
			$current = $this_QueryConstraint_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSolutionStoreParserRuleCall_13());
		}
		this_SolutionStore_13=ruleSolutionStore
		{
			$current = $this_SolutionStore_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getDseImport_ImplParserRuleCall_14());
		}
		this_DseImport_Impl_14=ruleDseImport_Impl
		{
			$current = $this_DseImport_Impl_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getEvolutionaryStrategyBuilderParserRuleCall_15());
		}
		this_EvolutionaryStrategyBuilder_15=ruleEvolutionaryStrategyBuilder
		{
			$current = $this_EvolutionaryStrategyBuilder_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getIMutationRateParserRuleCall_16());
		}
		this_IMutationRate_16=ruleIMutationRate
		{
			$current = $this_IMutationRate_16.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleType_Impl
entryRuleType_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getType_ImplRule()); }
	iv_ruleType_Impl=ruleType_Impl
	{ $current=$iv_ruleType_Impl.current; }
	EOF;

// Rule Type_Impl
ruleType_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getType_ImplAccess().getTypeAction_0(),
					$current);
			}
		)
		otherlv_1='Type'
		{
			newLeafNode(otherlv_1, grammarAccess.getType_ImplAccess().getTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleIMutationRate
entryRuleIMutationRate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIMutationRateRule()); }
	iv_ruleIMutationRate=ruleIMutationRate
	{ $current=$iv_ruleIMutationRate.current; }
	EOF;

// Rule IMutationRate
ruleIMutationRate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIMutationRateAccess().getIMutationRateAction_0(),
					$current);
			}
		)
		otherlv_1='Mutation'
		{
			newLeafNode(otherlv_1, grammarAccess.getIMutationRateAccess().getMutationKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getIMutationRateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIMutationRateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getIMutationRateAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIMutationRateAccess().getWeightEIntParserRuleCall_4_0());
				}
				lv_weight_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIMutationRateRule());
					}
					set(
						$current,
						"weight",
						lv_weight_4_0,
						"org.eclipse.viatra.dse.Ddsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getIMutationRateAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getIMutationRateAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Rule StrategyType
ruleStrategyType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='DfsStrategy'
			{
				$current = grammarAccess.getStrategyTypeAccess().getDfsStrategyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStrategyTypeAccess().getDfsStrategyEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='BfsStrategy'
			{
				$current = grammarAccess.getStrategyTypeAccess().getBfsStrategyEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStrategyTypeAccess().getBfsStrategyEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='FixedPriorityStrategy'
			{
				$current = grammarAccess.getStrategyTypeAccess().getFixedPriorityStrategyEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStrategyTypeAccess().getFixedPriorityStrategyEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='HillClimbingStrategy'
			{
				$current = grammarAccess.getStrategyTypeAccess().getHillClimbingStrategyEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStrategyTypeAccess().getHillClimbingStrategyEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Comparators
ruleComparators returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='HIGHER_IS_BETTER'
			{
				$current = grammarAccess.getComparatorsAccess().getHIGHER_IS_BETTEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparatorsAccess().getHIGHER_IS_BETTEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='LOWER_IS_BETTER'
			{
				$current = grammarAccess.getComparatorsAccess().getLOWER_IS_BETTEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparatorsAccess().getLOWER_IS_BETTEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DIFFERENCE_TO_ZERO_IS_BETTER'
			{
				$current = grammarAccess.getComparatorsAccess().getDIFFERENCE_TO_ZERO_IS_BETTEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComparatorsAccess().getDIFFERENCE_TO_ZERO_IS_BETTEREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ModelQueryType
ruleModelQueryType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MUST_HAVE_MATCH'
			{
				$current = grammarAccess.getModelQueryTypeAccess().getMUST_HAVE_MATCHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getModelQueryTypeAccess().getMUST_HAVE_MATCHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NO_MATCH'
			{
				$current = grammarAccess.getModelQueryTypeAccess().getNO_MATCHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getModelQueryTypeAccess().getNO_MATCHEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule EvolutionStrategyType
ruleEvolutionStrategyType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Nsga2'
			{
				$current = grammarAccess.getEvolutionStrategyTypeAccess().getNsga2EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEvolutionStrategyTypeAccess().getNsga2EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Pesa'
			{
				$current = grammarAccess.getEvolutionStrategyTypeAccess().getPesaEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEvolutionStrategyTypeAccess().getPesaEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
