/*
 * generated by Xtext 2.10.0
 */
package org.eclipse.viatra.dse.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.viatra.dse.ide.contentassist.antlr.internal.InternalDdslParser;
import org.eclipse.viatra.dse.services.DdslGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class DdslParser extends AbstractContentAssistParser {

	@Inject
	private DdslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalDdslParser createParser() {
		InternalDdslParser result = new InternalDdslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBaseStrategyAccess().getAlternatives(), "rule__BaseStrategy__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getDseProblemComponentAccess().getAlternatives(), "rule__DseProblemComponent__Alternatives");
					put(grammarAccess.getConstraintAccess().getAlternatives(), "rule__Constraint__Alternatives");
					put(grammarAccess.getBaseObjectiveAccess().getAlternatives(), "rule__BaseObjective__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getEFloatAccess().getAlternatives_4_0(), "rule__EFloat__Alternatives_4_0");
					put(grammarAccess.getStrategyTypeAccess().getAlternatives(), "rule__StrategyType__Alternatives");
					put(grammarAccess.getComparatorsAccess().getAlternatives(), "rule__Comparators__Alternatives");
					put(grammarAccess.getModelQueryTypeAccess().getAlternatives(), "rule__ModelQueryType__Alternatives");
					put(grammarAccess.getEvolutionStrategyTypeAccess().getAlternatives(), "rule__EvolutionStrategyType__Alternatives");
					put(grammarAccess.getDseExecutionModelAccess().getGroup(), "rule__DseExecutionModel__Group__0");
					put(grammarAccess.getDseExecutionModelAccess().getGroup_4(), "rule__DseExecutionModel__Group_4__0");
					put(grammarAccess.getDseExecutionModelAccess().getGroup_5(), "rule__DseExecutionModel__Group_5__0");
					put(grammarAccess.getDseExecutionModelAccess().getGroup_5_3(), "rule__DseExecutionModel__Group_5_3__0");
					put(grammarAccess.getDseExecutionModelAccess().getGroup_7(), "rule__DseExecutionModel__Group_7__0");
					put(grammarAccess.getDseExecutionModelAccess().getGroup_8(), "rule__DseExecutionModel__Group_8__0");
					put(grammarAccess.getDseExecutionModelAccess().getGroup_8_3(), "rule__DseExecutionModel__Group_8_3__0");
					put(grammarAccess.getDseProblemAccess().getGroup(), "rule__DseProblem__Group__0");
					put(grammarAccess.getDseProblemAccess().getGroup_3(), "rule__DseProblem__Group_3__0");
					put(grammarAccess.getDseProblemAccess().getGroup_3_3(), "rule__DseProblem__Group_3_3__0");
					put(grammarAccess.getDseProblemAccess().getGroup_4(), "rule__DseProblem__Group_4__0");
					put(grammarAccess.getDseProblemAccess().getGroup_5(), "rule__DseProblem__Group_5__0");
					put(grammarAccess.getDseProblemAccess().getGroup_5_3(), "rule__DseProblem__Group_5_3__0");
					put(grammarAccess.getDseProblemAccess().getGroup_6(), "rule__DseProblem__Group_6__0");
					put(grammarAccess.getDseProblemAccess().getGroup_7(), "rule__DseProblem__Group_7__0");
					put(grammarAccess.getDseProblemAccess().getGroup_11(), "rule__DseProblem__Group_11__0");
					put(grammarAccess.getDseProblemAccess().getGroup_15(), "rule__DseProblem__Group_15__0");
					put(grammarAccess.getDseProblemAccess().getGroup_16(), "rule__DseProblem__Group_16__0");
					put(grammarAccess.getDseProblemAccess().getGroup_17(), "rule__DseProblem__Group_17__0");
					put(grammarAccess.getConfigurationAccess().getGroup(), "rule__Configuration__Group__0");
					put(grammarAccess.getConfigurationAccess().getGroup_4(), "rule__Configuration__Group_4__0");
					put(grammarAccess.getConfigurationAccess().getGroup_5(), "rule__Configuration__Group_5__0");
					put(grammarAccess.getConfigurationAccess().getGroup_5_3(), "rule__Configuration__Group_5_3__0");
					put(grammarAccess.getStrategyAccess().getGroup(), "rule__Strategy__Group__0");
					put(grammarAccess.getStrategyAccess().getGroup_5(), "rule__Strategy__Group_5__0");
					put(grammarAccess.getConstraint_ImplAccess().getGroup(), "rule__Constraint_Impl__Group__0");
					put(grammarAccess.getInitialModelAccess().getGroup(), "rule__InitialModel__Group__0");
					put(grammarAccess.getMetaModelAccess().getGroup(), "rule__MetaModel__Group__0");
					put(grammarAccess.getBaseObjective_ImplAccess().getGroup(), "rule__BaseObjective_Impl__Group__0");
					put(grammarAccess.getTransformationRuleAccess().getGroup(), "rule__TransformationRule__Group__0");
					put(grammarAccess.getStateCoderAccess().getGroup(), "rule__StateCoder__Group__0");
					put(grammarAccess.getConstraintsObjectiveAccess().getGroup(), "rule__ConstraintsObjective__Group__0");
					put(grammarAccess.getConstraintsObjectiveAccess().getGroup_5(), "rule__ConstraintsObjective__Group_5__0");
					put(grammarAccess.getConstraintsObjectiveAccess().getGroup_6(), "rule__ConstraintsObjective__Group_6__0");
					put(grammarAccess.getQueryConstraintAccess().getGroup(), "rule__QueryConstraint__Group__0");
					put(grammarAccess.getQueryConstraintAccess().getGroup_3(), "rule__QueryConstraint__Group_3__0");
					put(grammarAccess.getQueryConstraintAccess().getGroup_4(), "rule__QueryConstraint__Group_4__0");
					put(grammarAccess.getQueryConstraintAccess().getGroup_5(), "rule__QueryConstraint__Group_5__0");
					put(grammarAccess.getSolutionStoreAccess().getGroup(), "rule__SolutionStore__Group__0");
					put(grammarAccess.getDseImport_ImplAccess().getGroup(), "rule__DseImport_Impl__Group__0");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getGroup(), "rule__EvolutionaryStrategyBuilder__Group__0");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getGroup_6(), "rule__EvolutionaryStrategyBuilder__Group_6__0");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getGroup_6_3(), "rule__EvolutionaryStrategyBuilder__Group_6_3__0");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getGroup_7(), "rule__EvolutionaryStrategyBuilder__Group_7__0");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getGroup_7_3(), "rule__EvolutionaryStrategyBuilder__Group_7_3__0");
					put(grammarAccess.getType_ImplAccess().getGroup(), "rule__Type_Impl__Group__0");
					put(grammarAccess.getIMutationRateAccess().getGroup(), "rule__IMutationRate__Group__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
					put(grammarAccess.getEFloatAccess().getGroup(), "rule__EFloat__Group__0");
					put(grammarAccess.getEFloatAccess().getGroup_4(), "rule__EFloat__Group_4__0");
					put(grammarAccess.getDomainModelAccess().getTypeAssignment(), "rule__DomainModel__TypeAssignment");
					put(grammarAccess.getDseExecutionModelAccess().getNameAssignment_2(), "rule__DseExecutionModel__NameAssignment_2");
					put(grammarAccess.getDseExecutionModelAccess().getPackageNameAssignment_4_1(), "rule__DseExecutionModel__PackageNameAssignment_4_1");
					put(grammarAccess.getDseExecutionModelAccess().getConfigurationsAssignment_5_2(), "rule__DseExecutionModel__ConfigurationsAssignment_5_2");
					put(grammarAccess.getDseExecutionModelAccess().getConfigurationsAssignment_5_3_1(), "rule__DseExecutionModel__ConfigurationsAssignment_5_3_1");
					put(grammarAccess.getDseExecutionModelAccess().getDseproblemsAssignment_6(), "rule__DseExecutionModel__DseproblemsAssignment_6");
					put(grammarAccess.getDseExecutionModelAccess().getNumberOfRunsAssignment_7_1(), "rule__DseExecutionModel__NumberOfRunsAssignment_7_1");
					put(grammarAccess.getDseExecutionModelAccess().getDseproblemcomponentsAssignment_8_2(), "rule__DseExecutionModel__DseproblemcomponentsAssignment_8_2");
					put(grammarAccess.getDseExecutionModelAccess().getDseproblemcomponentsAssignment_8_3_1(), "rule__DseExecutionModel__DseproblemcomponentsAssignment_8_3_1");
					put(grammarAccess.getDseProblemAccess().getNameAssignment_1(), "rule__DseProblem__NameAssignment_1");
					put(grammarAccess.getDseProblemAccess().getImportsAssignment_3_2(), "rule__DseProblem__ImportsAssignment_3_2");
					put(grammarAccess.getDseProblemAccess().getImportsAssignment_3_3_1(), "rule__DseProblem__ImportsAssignment_3_3_1");
					put(grammarAccess.getDseProblemAccess().getConfigurationsAssignment_4_2(), "rule__DseProblem__ConfigurationsAssignment_4_2");
					put(grammarAccess.getDseProblemAccess().getConstraintsAssignment_5_2(), "rule__DseProblem__ConstraintsAssignment_5_2");
					put(grammarAccess.getDseProblemAccess().getConstraintsAssignment_5_3_1(), "rule__DseProblem__ConstraintsAssignment_5_3_1");
					put(grammarAccess.getDseProblemAccess().getInitialmodelAssignment_6_2(), "rule__DseProblem__InitialmodelAssignment_6_2");
					put(grammarAccess.getDseProblemAccess().getMetamodelAssignment_7_2(), "rule__DseProblem__MetamodelAssignment_7_2");
					put(grammarAccess.getDseProblemAccess().getObjectivesAssignment_10(), "rule__DseProblem__ObjectivesAssignment_10");
					put(grammarAccess.getDseProblemAccess().getObjectivesAssignment_11_1(), "rule__DseProblem__ObjectivesAssignment_11_1");
					put(grammarAccess.getDseProblemAccess().getTransformationrulesAssignment_14(), "rule__DseProblem__TransformationrulesAssignment_14");
					put(grammarAccess.getDseProblemAccess().getTransformationrulesAssignment_15_1(), "rule__DseProblem__TransformationrulesAssignment_15_1");
					put(grammarAccess.getDseProblemAccess().getStatecoderAssignment_16_2(), "rule__DseProblem__StatecoderAssignment_16_2");
					put(grammarAccess.getDseProblemAccess().getSolutionstoreAssignment_17_2(), "rule__DseProblem__SolutionstoreAssignment_17_2");
					put(grammarAccess.getConfigurationAccess().getNameAssignment_2(), "rule__Configuration__NameAssignment_2");
					put(grammarAccess.getConfigurationAccess().getMaxNumberOfThreadsAssignment_4_2(), "rule__Configuration__MaxNumberOfThreadsAssignment_4_2");
					put(grammarAccess.getConfigurationAccess().getDseproblemsAssignment_5_2(), "rule__Configuration__DseproblemsAssignment_5_2");
					put(grammarAccess.getConfigurationAccess().getDseproblemsAssignment_5_3_1(), "rule__Configuration__DseproblemsAssignment_5_3_1");
					put(grammarAccess.getConfigurationAccess().getStrategyAssignment_6(), "rule__Configuration__StrategyAssignment_6");
					put(grammarAccess.getStrategyAccess().getNameAssignment_2(), "rule__Strategy__NameAssignment_2");
					put(grammarAccess.getStrategyAccess().getTypeAssignment_4(), "rule__Strategy__TypeAssignment_4");
					put(grammarAccess.getStrategyAccess().getDepthAssignment_5_1(), "rule__Strategy__DepthAssignment_5_1");
					put(grammarAccess.getConstraint_ImplAccess().getConstraintNameAssignment_2(), "rule__Constraint_Impl__ConstraintNameAssignment_2");
					put(grammarAccess.getInitialModelAccess().getNameAssignment_2(), "rule__InitialModel__NameAssignment_2");
					put(grammarAccess.getInitialModelAccess().getPathAssignment_4(), "rule__InitialModel__PathAssignment_4");
					put(grammarAccess.getMetaModelAccess().getNameAssignment_2(), "rule__MetaModel__NameAssignment_2");
					put(grammarAccess.getBaseObjective_ImplAccess().getNameAssignment_2(), "rule__BaseObjective_Impl__NameAssignment_2");
					put(grammarAccess.getBaseObjective_ImplAccess().getFitnessConstraintAssignment_4(), "rule__BaseObjective_Impl__FitnessConstraintAssignment_4");
					put(grammarAccess.getBaseObjective_ImplAccess().getComparatorAssignment_5(), "rule__BaseObjective_Impl__ComparatorAssignment_5");
					put(grammarAccess.getTransformationRuleAccess().getNameAssignment_2(), "rule__TransformationRule__NameAssignment_2");
					put(grammarAccess.getTransformationRuleAccess().getClassNameAssignment_4(), "rule__TransformationRule__ClassNameAssignment_4");
					put(grammarAccess.getTransformationRuleAccess().getMethodNameAssignment_6(), "rule__TransformationRule__MethodNameAssignment_6");
					put(grammarAccess.getStateCoderAccess().getNameAssignment_2(), "rule__StateCoder__NameAssignment_2");
					put(grammarAccess.getConstraintsObjectiveAccess().getNameAssignment_2(), "rule__ConstraintsObjective__NameAssignment_2");
					put(grammarAccess.getConstraintsObjectiveAccess().getFitnessConstraintAssignment_4(), "rule__ConstraintsObjective__FitnessConstraintAssignment_4");
					put(grammarAccess.getConstraintsObjectiveAccess().getHardConstraintsAssignment_5_1(), "rule__ConstraintsObjective__HardConstraintsAssignment_5_1");
					put(grammarAccess.getConstraintsObjectiveAccess().getSoftConstraintsAssignment_6_1(), "rule__ConstraintsObjective__SoftConstraintsAssignment_6_1");
					put(grammarAccess.getConstraintsObjectiveAccess().getComparatorAssignment_7(), "rule__ConstraintsObjective__ComparatorAssignment_7");
					put(grammarAccess.getQueryConstraintAccess().getNameAssignment_2(), "rule__QueryConstraint__NameAssignment_2");
					put(grammarAccess.getQueryConstraintAccess().getConstraintNameAssignment_3_1(), "rule__QueryConstraint__ConstraintNameAssignment_3_1");
					put(grammarAccess.getQueryConstraintAccess().getWeightAssignment_4_1(), "rule__QueryConstraint__WeightAssignment_4_1");
					put(grammarAccess.getQueryConstraintAccess().getTypeAssignment_5_1(), "rule__QueryConstraint__TypeAssignment_5_1");
					put(grammarAccess.getSolutionStoreAccess().getNameAssignment_2(), "rule__SolutionStore__NameAssignment_2");
					put(grammarAccess.getSolutionStoreAccess().getFoundSolutionsAssignment_4(), "rule__SolutionStore__FoundSolutionsAssignment_4");
					put(grammarAccess.getSolutionStoreAccess().getAcceptAnySolutionsAssignment_5(), "rule__SolutionStore__AcceptAnySolutionsAssignment_5");
					put(grammarAccess.getSolutionStoreAccess().getStoreBestSolutionsOnlyAssignment_6(), "rule__SolutionStore__StoreBestSolutionsOnlyAssignment_6");
					put(grammarAccess.getSolutionStoreAccess().getLogSolutionsWhenFoundAssignment_7(), "rule__SolutionStore__LogSolutionsWhenFoundAssignment_7");
					put(grammarAccess.getSolutionStoreAccess().getRegisterSolutionFoundHandlerAssignment_8(), "rule__SolutionStore__RegisterSolutionFoundHandlerAssignment_8");
					put(grammarAccess.getDseImport_ImplAccess().getImportsAssignment_2(), "rule__DseImport_Impl__ImportsAssignment_2");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getNameAssignment_2(), "rule__EvolutionaryStrategyBuilder__NameAssignment_2");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getPopulationSizeAssignment_4(), "rule__EvolutionaryStrategyBuilder__PopulationSizeAssignment_4");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getTypeAssignment_5(), "rule__EvolutionaryStrategyBuilder__TypeAssignment_5");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getCrossOversAssignment_6_2(), "rule__EvolutionaryStrategyBuilder__CrossOversAssignment_6_2");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getCrossOversAssignment_6_3_1(), "rule__EvolutionaryStrategyBuilder__CrossOversAssignment_6_3_1");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getMutationsAssignment_7_2(), "rule__EvolutionaryStrategyBuilder__MutationsAssignment_7_2");
					put(grammarAccess.getEvolutionaryStrategyBuilderAccess().getMutationsAssignment_7_3_1(), "rule__EvolutionaryStrategyBuilder__MutationsAssignment_7_3_1");
					put(grammarAccess.getIMutationRateAccess().getNameAssignment_2(), "rule__IMutationRate__NameAssignment_2");
					put(grammarAccess.getIMutationRateAccess().getWeightAssignment_4(), "rule__IMutationRate__WeightAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalDdslParser typedParser = (InternalDdslParser) parser;
			typedParser.entryRuleDomainModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DdslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
